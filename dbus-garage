#!/usr/bin/env bash

readonly VERSION='1.1.0' # codename friday

# Library
#
function dbus.add_instance {
	local PID SOCKET INSTANCE EXISTING
	PID="$1"
	SOCKET="$2"
	SOCKET="${SOCKET#unix:abstract=}" # drop prefix
	SOCKET="${SOCKET%,*}"             # drop suffix
	INSTANCE="$PID $SOCKET"
	for EXISTING in "${INSTANCES[@]}"; do
		[[ "$EXISTING" == "$INSTANCE" ]] && return
	done
	INSTANCES+=( "$INSTANCE" )
}

function dbus.populate_instances! {
	local PID INSTANCE EXISTING
	while read; do
		case "$REPLY" in
			p*) PID="${REPLY#p}" ;;
			n*) [[ "$REPLY" =~ ^n@ ]] && dbus.add_instance "$PID" "${REPLY#n@}" ;;
		esac
	done < <(lsof -a -U -c dbus-daemon +F n)
}

function dbus.report {
	case "${#INSTANCES[@]}" in
		0) : ;;
		1) echo " * Found a DBus session: ${INSTANCES}" ;;
		*)
			echo           ' ! Found multiple DBus sessions, will make use of the last one'
			dbus.instances '   '
		;;
	esac
}

function dbus.launch_unless_running! {
	(( "${#INSTANCES[@]}" )) && return
	eval $( env -i "$0" _raw_launch )
	dbus.add_instance "$DBUS_SESSION_BUS_PID" "$DBUS_SESSION_BUS_ADDRESS"
	echo " * Started a new DBus session: ${INSTANCES}"
}

function dbus.instances {
	local INSTANCE
	for INSTANCE in "${INSTANCES[@]}"; do echo "${1}${INSTANCE}"; done
}

function dbus.export_socket {
	local INSTANCE="${INSTANCES[@]: -1}"
	echo "export DBUS_SESSION_BUS_ADDRESS=unix:abstract=${INSTANCE#* }"
}

# Runtime
#
declare -a INSTANCES=( )

case "$1" in
	version)
		echo "dbus-garage version $VERSION"
		exit
	;;
	_raw_launch)
		set -a # export everything
		[[ -r /etc/environment ]] && source /etc/environment
		[[ -r /etc/default/locale ]] && source /etc/default/locale
		PATH=/usr/bin:/bin
		LOGNAME="$( whoami )"
		HOME="$( getent passwd `id -u` | cut -d: -f 6 )"
		SHELL="$( getent passwd `id -u` | cut -d: -f 7 )"
		env -u _ -u PWD -u SHLVL dbus-launch
	;;
	hop-on|print|get)
		dbus.populate_instances!
		dbus.report >&2
		dbus.launch_unless_running! >&2
		dbus.export_socket
	;;
	en-route|status|instances)
		dbus.populate_instances!
		dbus.instances
		case "${#INSTANCES[@]}" in
			0) exit 1 ;;
			1) exit 0 ;;
			*) exit "${#INSTANCES[@]}" ;;
		esac
	;;
	*)
		echo 'Usage: see code'
		exit 1
	;;
esac
